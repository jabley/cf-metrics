// This file was generated by counterfeiter
package fakes

import (
	"net/http"
	"sync"

	"github.com/cloudfoundry/go-ccapi/v3/client"
)

type FakeFetcher struct {
	FetchStub        func(req *http.Request) ([]byte, error)
	fetchMutex       sync.RWMutex
	fetchArgsForCall []struct {
		req *http.Request
	}
	fetchReturns struct {
		result1 []byte
		result2 error
	}
	GetUpdatedTokensStub        func() (string, string)
	getUpdatedTokensMutex       sync.RWMutex
	getUpdatedTokensArgsForCall []struct{}
	getUpdatedTokensReturns     struct {
		result1 string
		result2 string
	}
}

func (fake *FakeFetcher) Fetch(req *http.Request) ([]byte, error) {
	fake.fetchMutex.Lock()
	fake.fetchArgsForCall = append(fake.fetchArgsForCall, struct {
		req *http.Request
	}{req})
	fake.fetchMutex.Unlock()
	if fake.FetchStub != nil {
		return fake.FetchStub(req)
	} else {
		return fake.fetchReturns.result1, fake.fetchReturns.result2
	}
}

func (fake *FakeFetcher) FetchCallCount() int {
	fake.fetchMutex.RLock()
	defer fake.fetchMutex.RUnlock()
	return len(fake.fetchArgsForCall)
}

func (fake *FakeFetcher) FetchArgsForCall(i int) *http.Request {
	fake.fetchMutex.RLock()
	defer fake.fetchMutex.RUnlock()
	return fake.fetchArgsForCall[i].req
}

func (fake *FakeFetcher) FetchReturns(result1 []byte, result2 error) {
	fake.FetchStub = nil
	fake.fetchReturns = struct {
		result1 []byte
		result2 error
	}{result1, result2}
}

func (fake *FakeFetcher) GetUpdatedTokens() (string, string) {
	fake.getUpdatedTokensMutex.Lock()
	fake.getUpdatedTokensArgsForCall = append(fake.getUpdatedTokensArgsForCall, struct{}{})
	fake.getUpdatedTokensMutex.Unlock()
	if fake.GetUpdatedTokensStub != nil {
		return fake.GetUpdatedTokensStub()
	} else {
		return fake.getUpdatedTokensReturns.result1, fake.getUpdatedTokensReturns.result2
	}
}

func (fake *FakeFetcher) GetUpdatedTokensCallCount() int {
	fake.getUpdatedTokensMutex.RLock()
	defer fake.getUpdatedTokensMutex.RUnlock()
	return len(fake.getUpdatedTokensArgsForCall)
}

func (fake *FakeFetcher) GetUpdatedTokensReturns(result1 string, result2 string) {
	fake.GetUpdatedTokensStub = nil
	fake.getUpdatedTokensReturns = struct {
		result1 string
		result2 string
	}{result1, result2}
}

var _ client.Fetcher = new(FakeFetcher)
