---
platform: linux

image: docker:///cloudfoundry/cli-vagrant-ci

params:
  LITE_IP_ADDRESS:
  LITE_HOSTNAME:

inputs:
- name: cf-routing-release
- name: cf-routing-release-repo
- name: cf-release-repo
- name: bosh-lite-lock

run:
  path: bash
  args:
  - -c
  - |
    set -eux

    export DOMAIN=`cat bosh-lite-lock/name`

    export ADMIN_USER=admin
    export ADMIN_PASSWORD=admin
    export API_ENDPOINT="https://api.${DOMAIN}"

    cf_deployment_name=cf-warden
    cf_deployment_file=cf-warden.yml

    diego_deployment_name=cf-warden-diego
    diego_deployment_file=cf-warden-diego.yml

    bosh -n target $LITE_IP_ADDRESS

    bosh -n -u $ADMIN_USER -p $ADMIN_PASSWORD upload release cf-routing-release/release.tgz --skip-if-exists

    cd cf-routing-release-repo

    bosh -n -u $ADMIN_USER -p $ADMIN_PASSWORD download manifest $cf_deployment_name $cf_deployment_file
    bosh -n -u $ADMIN_USER -p $ADMIN_PASSWORD download manifest $diego_deployment_name $diego_deployment_file

    ./scripts/generate-bosh-lite-manifest $cf_deployment_file $diego_deployment_file

    bosh -n -u $ADMIN_USER -p $ADMIN_PASSWORD deploy

    ####
    # Redeploy CF with new routing stuff enabled
    cat<<EOF > post-routing-release-deploy-overrides.yml
    properties:
      routing_api:
        enabled: true
    EOF

    spiff merge $cf_deployment_file post-routing-release-deploy-overrides.yml > cf-warden-plus-plus.yml
    bosh deployment cf-warden-plus-plus.yml
    bosh -n -u $ADMIN_USER -p $ADMIN_PASSWORD deploy
    ####

    bosh -n -u $ADMIN_USER -p $ADMIN_PASSWORD cleanup
