---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: cli
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master
    ignore_paths:
    - ci

- name: final-cli
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master
    paths:
    - ci/VERSION

- name: cli-private
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master

- name: cli-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master
    paths:
    - ci

- name: cli-acceptance-tests
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-acceptance-tests
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master

- name: cf-release-repo
  type: git
  source:
    uri: git@github.com:cloudfoundry/cf-release
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master

- name: cf-cli-binaries
  type: s3
  source:
    bucket: {{staging-bucket-name}}
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: cf-cli-binaries.tgz

- name: edge-linux-binary-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli_edge_linux_i686.tgz
    region_name: us-west-1

- name: edge-linux-binary-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli_edge_linux_x86-64.tgz
    region_name: us-west-1

- name: edge-osx-binary-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli_edge_osx.tgz
    region_name: us-west-1

- name: edge-windows-binary-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-binary-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli_edge_winx64.zip
    region_name: us-west-1

- name: edge-deb-installer-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_i686.deb
    region_name: us-west-1

- name: edge-deb-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_x86-64.deb
    region_name: us-west-1

- name: edge-redhat-installer-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_i686.rpm
    region_name: us-west-1

- name: edge-redhat-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_x86-64.rpm
    region_name: us-west-1

- name: edge-osx-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_osx.pkg
    region_name: us-west-1

- name: edge-windows-installer-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: {{cli-production-access-key-id}}
    secret_access_key: {{cli-production-secret-access-key}}
    versioned_file: master/cf-cli-installer_edge_winx64.zip
    region_name: us-west-1

- name: bosh-lites-dea-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: {{cli-pools-github-private-key}}
    branch: master
    pool: bosh-lites-dea

- name: bosh-lites-diego-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: {{cli-pools-github-private-key}}
    branch: master
    pool: bosh-lites-diego

- name: cf-cli-tracker
  type: tracker
  source:
    token: {{cf-cli-public-tracker-token}}
    project_id: {{cf-cli-public-tracker-project-id}}
    tracker_url: https://www.pivotaltracker.com

- name: golang
  type: docker-image
  source:
    repository: golang
    tag: latest

- name: cli-ci-dockerfile
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli
    private_key: {{cf-cli-eng-github-private-key}}
    branch: master
    paths: [ci/Dockerfile]

- name: cf-cli-image
  type: docker-image
  source:
    repository: cloudfoundry/cli-ci
    username: {{dockerhub-username}}
    email: {{dockerhub-email}}
    password: {{dockerhub-password}}

- name: slack-alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/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

- name: publish-rpm-timer
  type: time
  source:
    interval: 1h

groups:
- name: cli
  jobs:
  - units
  - build-binaries
  - gats
  - cats-linux
  - cats-diego
  - cats-windows
  - create-installers
- name: images
  jobs:
  - create-cli-ci-image

jobs:
- name: units
  serial: true
  plan:
  - aggregate:
    - get: cli
      trigger: true
    - get: final-cli
    - get: cli-ci
  - aggregate:
    - task: units-linux
      file: cli-ci/ci/cli/tasks/units-linux.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "linux unit tests failed OR errored :("
    - task: units-osx
      file: cli-ci/ci/cli/tasks/units-osx.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "osx unit tests failed OR errored :("
    - task: units-windows
      file: cli-ci/ci/cli/tasks/units-windows.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "windows unit tests failed OR errored :("
    - task: lint
      file: cli-ci/ci/cli/tasks/lint.yml

- name: build-binaries
  serial: true
  plan:
  - aggregate:
    - get: cli
      trigger: true
      passed: [units]
    - get: final-cli
      passed: [units]
    - get: cli-ci
  - aggregate:
    - task: build
      file: cli-ci/ci/cli/tasks/build-binaries.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "build binaries failed OR errored :("
    - task: build-osx
      file: cli-ci/ci/cli/tasks/build-osx-binary.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "build osx binaries failed OR errored :("
  - task: combine-binaries
    file: cli-ci/ci/cli/tasks/combine-binaries.yml
  - put: cf-cli-binaries
    params:
      file: compiled/cf-cli-binaries.tgz

- name: gats
  serial: true
  plan:
  - aggregate:
    - get: cf-cli-binaries
      trigger: true
      passed: [build-binaries]
    - get: final-cli
      passed: [build-binaries]
    - get: cli
      passed: [build-binaries]
    - get: cli-acceptance-tests
    - get: cli-ci
    - put: bosh-lite-lock
      resource: bosh-lites-dea-pool
      params:
        acquire: true
  - aggregate:
    - do:
      - task: linux
        file: cli-ci/ci/cli/tasks/gats-linux.yml
      - task: windows
        file: cli-ci/ci/cli/tasks/gats-windows.yml
        params:
          ADMIN_USER: {{bosh-lite-admin-username}}
          ADMIN_PASSWORD: {{bosh-lite-admin-password}}
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "gats failed OR errored :("
    ensure:
      put: bosh-lites-dea-pool
      params:
        release: bosh-lite-lock

- name: cats-linux
  serial: true
  plan:
  - aggregate:
    - get: final-cli
      passed: [build-binaries]
    - get: cli
      passed: [build-binaries]
    - get: cf-release-repo
      params:
        submodules:
        - src/github.com/cloudfoundry/cf-acceptance-tests
    - get: cf-cli-binaries
      trigger: true
      passed: [build-binaries]
    - get: cli-ci
    - put: bosh-lite-lock
      resource: bosh-lites-dea-pool
      params:
        acquire: true
  - aggregate:
    - task: cats
      file: cli-ci/ci/cli/tasks/cats-linux.yml
      params:
        BACKEND: dea
        INCLUDE_DEFAULT: true
        INCLUDE_INTERNET_DEPENDENT: true
        INCLUDE_ROUTE_SERVICES: true
        INCLUDE_SECURITY_GROUPS: true
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "cats linux failed OR errored :("
    - task: cats-services
      file: cli-ci/ci/cli/tasks/cats-linux.yml
      params:
        INCLUDE_SERVICES: true
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "cats services linux failed OR errored :("
    ensure:
      put: bosh-lites-dea-pool
      params:
        release: bosh-lite-lock

- name: cats-diego
  serial: true
  plan:
  - aggregate:
    - get: final-cli
      passed: [build-binaries]
    - get: cli
      passed: [build-binaries]
    - get: cf-release-repo
      params:
        submodules:
        - src/github.com/cloudfoundry/cf-acceptance-tests
    - get: cf-cli-binaries
      trigger: true
      passed: [build-binaries]
    - get: cli-ci
    - put: bosh-lite-lock
      resource: bosh-lites-diego-pool
      params:
        acquire: true
  - task: linux
    file: cli-ci/ci/cli/tasks/cats-linux.yml
    params:
      BACKEND: diego
      INCLUDE_DEFAULT: true
      INCLUDE_BACKEND_COMPATIBILITY: true
      INCLUDE_DIEGO_DOCKER: true
      INCLUDE_DIEGO_SSH: true
      INCLUDE_INTERNET_DEPENDENT: true
      INCLUDE_ROUTE_SERVICES: true
      INCLUDE_SECURITY_GROUPS: true
    ensure:
      put: bosh-lites-diego-pool
      params:
        release: bosh-lite-lock
    on_failure:
       put: slack-alert
       params:
         channel: '#cli-firehose'
         text: "cats diego failed OR errored :("

- name: cats-windows
  serial: true
  plan:
  - aggregate:
    - get: cf-cli-binaries
      trigger: true
      passed: [build-binaries]
    - get: final-cli
      passed: [build-binaries]
    - get: cli
      passed: [build-binaries]
    - get: cf-release-repo
      params:
        submodules:
        - src/github.com/cloudfoundry/cf-acceptance-tests
    - get: cli-ci
    - put: bosh-lite-lock
      resource: bosh-lites-dea-pool
      params:
        acquire: true
  - task: cats
    file: cli-ci/ci/cli/tasks/cats-windows.yml
    params:
      ADMIN_USER: {{bosh-lite-admin-username}}
      ADMIN_PASSWORD: {{bosh-lite-admin-password}}
    ensure:
      put: bosh-lites-dea-pool
      params:
        release: bosh-lite-lock
    on_failure:
       put: slack-alert
       params:
         channel: '#cli-firehose'
         text: "cats windows failed OR errored :("

- name: create-installers
  serial: true
  plan:
  - aggregate:
    - get: final-cli
      passed: [cats-linux, cats-windows, cats-diego, gats]
    - get: cli
      passed: [cats-linux, cats-windows, cats-diego, gats]
    - get: cf-cli-binaries
      trigger: true
      passed: [cats-linux, cats-windows, cats-diego, gats]
    - get: cli-private
    - get: cli-ci
  - task: extract-binaries
    file: cli-ci/ci/cli/tasks/extract-binaries.yml
    on_failure:
       put: slack-alert
       params:
         channel: '#cli-firehose'
         text: "extracting the binaries in installer creation failed OR errored :("
  - aggregate:
    - task: unix
      file: cli-ci/ci/cli/tasks/create-installers.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "create unix installers failed OR errored :("
    - task: windows
      file: cli-ci/ci/cli/tasks/create-installers-windows.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-firehose'
           text: "create windows installer failed OR errored :("
  - task: package-binaries
    file: cli-ci/ci/cli/tasks/package-binaries.yml
    on_failure:
       put: slack-alert
       params:
         channel: '#cli-firehose'
         text: "extracting the binaries in installer creation failed OR errored :("
  - aggregate:
    - put: edge-linux-binary-32
      params:
        file: archives/cf-cli_edge_linux_i686.tgz
    - put: edge-linux-binary-64
      params:
        file: archives/cf-cli_edge_linux_x86-64.tgz
    - put: edge-osx-binary-64
      params:
        file: archives/cf-cli_edge_osx.tgz
    - put: edge-windows-binary-32
      params:
        file: archives/cf-cli_edge_win32.zip
    - put: edge-windows-binary-64
      params:
        file: archives/cf-cli_edge_winx64.zip
    - put: edge-deb-installer-32
      params:
        file: archives/cf-cli-installer_i686.deb
    - put: edge-deb-installer-64
      params:
        file: archives/cf-cli-installer_x86-64.deb
    - put: edge-redhat-installer-32
      params:
        file: archives/cf-cli-installer_i686.rpm
    - put: edge-redhat-installer-64
      params:
        file: archives/cf-cli-installer_x86-64.rpm
    - put: edge-osx-installer-64
      params:
        file: archives/cf-cli-installer_osx.pkg
    - put: edge-windows-installer-32
      params:
        file: winstallers/cf-cli-installer_win32.zip
    - put: edge-windows-installer-64
      params:
        file: winstallers/cf-cli-installer_winx64.zip
  - put: cf-cli-tracker
    params:
      repos:
      - cli

- name: create-cli-ci-image
  serial: true
  plan:
  - aggregate:
    - get: cli-ci-dockerfile
      trigger: true
    - get: golang
      trigger: true
      params: {save: true}
  - put: cf-cli-image
    params:
      load_base: golang
      build: cli-ci-dockerfile/ci
