// This file was generated by counterfeiter
package uifakes

import (
	"sync"

	"code.cloudfoundry.org/cli/utils/ui"
)

type FakeTranslatableError struct {
	ErrorStub        func() string
	errorMutex       sync.RWMutex
	errorArgsForCall []struct{}
	errorReturns     struct {
		result1 string
	}
	TranslateStub        func(func(string, ...interface{}) string) string
	translateMutex       sync.RWMutex
	translateArgsForCall []struct {
		arg1 func(string, ...interface{}) string
	}
	translateReturns struct {
		result1 string
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeTranslatableError) Error() string {
	fake.errorMutex.Lock()
	fake.errorArgsForCall = append(fake.errorArgsForCall, struct{}{})
	fake.recordInvocation("Error", []interface{}{})
	fake.errorMutex.Unlock()
	if fake.ErrorStub != nil {
		return fake.ErrorStub()
	} else {
		return fake.errorReturns.result1
	}
}

func (fake *FakeTranslatableError) ErrorCallCount() int {
	fake.errorMutex.RLock()
	defer fake.errorMutex.RUnlock()
	return len(fake.errorArgsForCall)
}

func (fake *FakeTranslatableError) ErrorReturns(result1 string) {
	fake.ErrorStub = nil
	fake.errorReturns = struct {
		result1 string
	}{result1}
}

func (fake *FakeTranslatableError) Translate(arg1 func(string, ...interface{}) string) string {
	fake.translateMutex.Lock()
	fake.translateArgsForCall = append(fake.translateArgsForCall, struct {
		arg1 func(string, ...interface{}) string
	}{arg1})
	fake.recordInvocation("Translate", []interface{}{arg1})
	fake.translateMutex.Unlock()
	if fake.TranslateStub != nil {
		return fake.TranslateStub(arg1)
	} else {
		return fake.translateReturns.result1
	}
}

func (fake *FakeTranslatableError) TranslateCallCount() int {
	fake.translateMutex.RLock()
	defer fake.translateMutex.RUnlock()
	return len(fake.translateArgsForCall)
}

func (fake *FakeTranslatableError) TranslateArgsForCall(i int) func(string, ...interface{}) string {
	fake.translateMutex.RLock()
	defer fake.translateMutex.RUnlock()
	return fake.translateArgsForCall[i].arg1
}

func (fake *FakeTranslatableError) TranslateReturns(result1 string) {
	fake.TranslateStub = nil
	fake.translateReturns = struct {
		result1 string
	}{result1}
}

func (fake *FakeTranslatableError) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.errorMutex.RLock()
	defer fake.errorMutex.RUnlock()
	fake.translateMutex.RLock()
	defer fake.translateMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeTranslatableError) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ ui.TranslatableError = new(FakeTranslatableError)
